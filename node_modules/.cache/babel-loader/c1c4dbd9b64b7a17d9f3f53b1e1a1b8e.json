{"ast":null,"code":"var _jsxFileName = \"/Users/josegomez/Code/netflix-clone/src/components/Cast.js\";\nimport React, { Component, useEffect, useState } from 'react';\n\nconst axios = require('axios');\n\nfunction Cast(props) {\n  const [data, setData] = useState({\n    cast: []\n  });\n  const [error, setError] = useState('');\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=3fe0146e60722e9fc1e2731f6e6bea06`).then(res => {\n      setData(res.data);\n    }).catch(err => {\n      setError(err.message);\n    });\n  });\n  console.log(data.cast.length);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"casts__data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, data.cast.map((actor, key) => /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, actor.name))), data.cast[0].name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }), data.cast[1].name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }), data.cast[2].name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }), data.cast[3].name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }));\n}\n\nexport default Cast;","map":{"version":3,"sources":["/Users/josegomez/Code/netflix-clone/src/components/Cast.js"],"names":["React","Component","useEffect","useState","axios","require","Cast","props","data","setData","cast","error","setError","get","id","then","res","catch","err","message","console","log","length","map","actor","key","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAGhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC/BO,IAAAA,IAAI,EAAC;AAD0B,GAAD,CAAhC;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACFD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACS,GAAN,CAAW,sCAAqCN,KAAK,CAACO,EAAG,mDAAzD,EACGC,IADH,CACQC,GAAG,IAAI;AACXP,MAAAA,OAAO,CAACO,GAAG,CAACR,IAAL,CAAP;AAEH,KAJD,EAKGS,KALH,CAKSC,GAAG,IAAI;AACZN,MAAAA,QAAQ,CAACM,GAAG,CAACC,OAAL,CAAR;AAEH,KARD;AASD,GAVQ,CAAT;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACE,IAAL,CAAUY,MAAtB;AACE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,IAAI,CAACE,IAAL,CAAUa,GAAV,CAAe,CAACC,KAAD,EAAQC,GAAR,kBACd;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,IADT,CADD,CADH,CADF,EAQGlB,IAAI,CAACE,IAAL,CAAU,CAAV,EAAagB,IARhB,oBAQsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARtB,EASGlB,IAAI,CAACE,IAAL,CAAU,CAAV,EAAagB,IAThB,oBASsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATtB,EAUGlB,IAAI,CAACE,IAAL,CAAU,CAAV,EAAagB,IAVhB,oBAUsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVtB,EAWGlB,IAAI,CAACE,IAAL,CAAU,CAAV,EAAagB,IAXhB,oBAWsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXtB,CADF;AAgBH;;AAED,eAAepB,IAAf","sourcesContent":["import React, { Component, useEffect , useState } from 'react'\nconst axios = require('axios');\nfunction Cast(props){\n \n    \n    const [data, setData] = useState({\n      cast:[]\n    });\n    const [error, setError] = useState('');\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=3fe0146e60722e9fc1e2731f6e6bea06`)\n      .then(res => {\n        setData(res.data);\n        \n    })\n      .catch(err => {\n        setError(err.message);\n        \n    })\n  });\n \n  console.log(data.cast.length);\n    return (\n      <div>\n        <ul className=\"casts__data\">\n          {data.cast.map( (actor, key) =>\n            <li key={key}>\n              {actor.name}\n            </li>\n          )}\n        </ul>\n        {data.cast[0].name} <br />\n        {data.cast[1].name} <br />\n        {data.cast[2].name} <br />\n        {data.cast[3].name} <br />\n      </div>\n    )\n  \n}\n\nexport default Cast\n"]},"metadata":{},"sourceType":"module"}